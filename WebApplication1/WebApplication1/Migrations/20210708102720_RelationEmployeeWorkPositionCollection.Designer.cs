// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210708102720_RelationEmployeeWorkPositionCollection")]
    partial class RelationEmployeeWorkPositionCollection
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.DbModels.WorkPositionsHistoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkPositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WorkPositionsHistory");
                });

            modelBuilder.Entity("WebApplication1.Models.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OnBoardDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkPositionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkPositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebApplication1.Models.WorkPositionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("WorkPositionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkPositions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            WorkPositionName = "Tester"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            WorkPositionName = "Programmer"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            WorkPositionName = "Support"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            WorkPositionName = "Analyst"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            WorkPositionName = "Businessman"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            WorkPositionName = "Other"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.EmployeeModel", b =>
                {
                    b.HasOne("WebApplication1.Models.WorkPositionModel", "WorkPosition")
                        .WithMany("Employee")
                        .HasForeignKey("WorkPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkPosition");
                });

            modelBuilder.Entity("WebApplication1.Models.WorkPositionModel", b =>
                {
                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
